"""Initial migration

Revision ID: 3c2560b8146d
Revises: 
Create Date: 2024-07-04 14:24:04.662428

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = '3c2560b8146d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_refresh_tokens',
    sa.Column('refresh_token_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('refresh_token_id')
    )
    op.create_table('routes',
    sa.Column('routes_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_location', sa.String(length=255), nullable=False),
    sa.Column('end_location', sa.String(length=255), nullable=False),
    sa.Column('distance', sa.String(length=255), nullable=False),
    sa.Column('estimated_time', sa.String(length=255), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('routes_id')
    )
    op.create_table('transport_modes',
    sa.Column('tmodes_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('urbano', 'taxi', 'mototaxi', 'a_pie', name='vehicletype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('tmodes_id')
    )
    op.create_table('travel_summary',
    sa.Column('tsummary_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('total_distance', sa.String(length=255), nullable=True),
    sa.Column('estimated_time', sa.String(length=255), nullable=False),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('pendiente', 'aprobado', 'cancelado', name='statustravel'), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('tsummary_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('dni', sa.String(length=11), nullable=True),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('is_authorized', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('dni'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('oauth_acces_token',
    sa.Column('token_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('jti', sa.String(), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('token_id')
    )
    op.create_table('vehicles',
    sa.Column('vehicles_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('license_plate', sa.String(length=20), nullable=True),
    sa.Column('transport_mode_id', sa.Integer(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['transport_mode_id'], ['transport_modes.tmodes_id'], ),
    sa.PrimaryKeyConstraint('vehicles_id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_table('assigned_routes',
    sa.Column('aroutes_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('travel_summary_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pendiente', 'en_progreso', 'completado', 'cancelado', name='statusroute'), nullable=False),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.routes_id'], ),
    sa.ForeignKeyConstraint(['travel_summary_id'], ['travel_summary.tsummary_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.vehicles_id'], ),
    sa.PrimaryKeyConstraint('aroutes_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assigned_routes')
    op.drop_table('vehicles')
    op.drop_table('oauth_acces_token')
    op.drop_table('users')
    op.drop_table('travel_summary')
    op.drop_table('transport_modes')
    op.drop_table('routes')
    op.drop_table('oauth_refresh_tokens')
    # ### end Alembic commands ###
